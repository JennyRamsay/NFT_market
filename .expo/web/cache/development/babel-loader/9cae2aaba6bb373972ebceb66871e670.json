{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPermissionHook = createPermissionHook;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = require(\"react\");\nvar _excluded = [\"get\", \"request\"];\nfunction usePermission(methods, options) {\n  var isMounted = (0, _react.useRef)(true);\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  var _ref = options || {},\n    _ref$get = _ref.get,\n    get = _ref$get === void 0 ? true : _ref$get,\n    _ref$request = _ref.request,\n    request = _ref$request === void 0 ? false : _ref$request,\n    permissionOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var getPermission = (0, _react.useCallback)(function _callee() {\n    var response;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(methods.getMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined));\n          case 2:\n            response = _context.sent;\n            if (isMounted.current) setStatus(response);\n            return _context.abrupt(\"return\", response);\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [methods.getMethod]);\n  var requestPermission = (0, _react.useCallback)(function _callee2() {\n    var response;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regenerator.default.awrap(methods.requestMethod(Object.keys(permissionOptions).length > 0 ? permissionOptions : undefined));\n          case 2:\n            response = _context2.sent;\n            if (isMounted.current) setStatus(response);\n            return _context2.abrupt(\"return\", response);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [methods.requestMethod]);\n  (0, _react.useEffect)(function runMethods() {\n    if (request) requestPermission();\n    if (!request && get) getPermission();\n  }, [get, request, requestPermission, getPermission]);\n  (0, _react.useEffect)(function didMount() {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  return [status, requestPermission, getPermission];\n}\nfunction createPermissionHook(methods) {\n  return function (options) {\n    return usePermission(methods, options);\n  };\n}","map":{"version":3,"mappings":";;;;;;;;AAAA;AAAiE;AA6BjE,SAASA,aAAa,CACpBC,OAAmD,EACnDC,OAAwC;EAExC,IAAMC,SAAS,GAAG,iBAAM,EAAC,IAAI,CAAC;EAC9B,gBAA4B,mBAAQ,EAAoB,IAAI,CAAC;IAAA;IAAtDC,MAAM;IAAEC,SAAS;EACxB,WAA8DH,OAAO,IAAI,EAAE;IAAA,gBAAnEI,GAAG;IAAHA,GAAG,yBAAG,IAAI;IAAA,oBAAEC,OAAO;IAAPA,OAAO,6BAAG,KAAK;IAAKC,iBAAiB;EAEzD,IAAMC,aAAa,GAAG,sBAAW,EAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACTR,OAAO,CAACS,SAAS,CACtCC,MAAM,CAACC,IAAI,CAACJ,iBAAiB,CAAC,CAACK,MAAM,GAAG,CAAC,GAAIL,iBAA6B,GAAGM,SAAS,CACvF;UAAA;YAFKC,QAAQ;YAGd,IAAIZ,SAAS,CAACa,OAAO,EAAEX,SAAS,CAACU,QAAQ,CAAC;YAAC,iCACpCA,QAAQ;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChB,EAAE,CAACd,OAAO,CAACS,SAAS,CAAC,CAAC;EAEvB,IAAMO,iBAAiB,GAAG,sBAAW,EAAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,kCACbhB,OAAO,CAACiB,aAAa,CAC1CP,MAAM,CAACC,IAAI,CAACJ,iBAAiB,CAAC,CAACK,MAAM,GAAG,CAAC,GAAIL,iBAA6B,GAAGM,SAAS,CACvF;UAAA;YAFKC,QAAQ;YAGd,IAAIZ,SAAS,CAACa,OAAO,EAAEX,SAAS,CAACU,QAAQ,CAAC;YAAC,kCACpCA,QAAQ;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAChB,EAAE,CAACd,OAAO,CAACiB,aAAa,CAAC,CAAC;EAE3B,oBAAS,EACP,SAASC,UAAU;IACjB,IAAIZ,OAAO,EAAEU,iBAAiB,EAAE;IAChC,IAAI,CAACV,OAAO,IAAID,GAAG,EAAEG,aAAa,EAAE;EACtC,CAAC,EACD,CAACH,GAAG,EAAEC,OAAO,EAAEU,iBAAiB,EAAER,aAAa,CAAC,CACjD;EAGD,oBAAS,EAAC,SAASW,QAAQ;IACzBjB,SAAS,CAACa,OAAO,GAAG,IAAI;IACxB,OAAO,YAAK;MACVb,SAAS,CAACa,OAAO,GAAG,KAAK;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACZ,MAAM,EAAEa,iBAAiB,EAAER,aAAa,CAAC;AACnD;AAMM,SAAUY,oBAAoB,CAClCpB,OAAmD;EAEnD,OAAO,UAACC,OAAwC;IAAA,OAC9CF,aAAa,CAAsBC,OAAO,EAAEC,OAAO,CAAC;EAAA;AACxD","names":["usePermission","methods","options","isMounted","status","setStatus","get","request","permissionOptions","getPermission","getMethod","Object","keys","length","undefined","response","current","requestPermission","requestMethod","runMethods","didMount","createPermissionHook"],"sourceRoot":"","sources":["../src/PermissionsHook.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\n\nimport { PermissionResponse } from './PermissionsInterface';\n\n// These types are identical, but improves the readability for suggestions in editors\ntype RequestPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\ntype GetPermissionMethod<Permission extends PermissionResponse> = () => Promise<Permission>;\n\ninterface PermissionHookMethods<Permission extends PermissionResponse, Options = never> {\n  /** The permission method that requests the user to grant permission. */\n  requestMethod: (options?: Options) => Promise<Permission>;\n  /** The permission method that only fetches the current permission status. */\n  getMethod: (options?: Options) => Promise<Permission>;\n}\n\ninterface PermissionHookBehavior {\n  /** If the hook should automatically fetch the current permission status, without asking the user. */\n  get?: boolean;\n  /** If the hook should automatically request the user to grant permission. */\n  request?: boolean;\n}\n\nexport type PermissionHookOptions<Options extends object> = PermissionHookBehavior & Options;\n\n/**\n * Get or request permission for protected functionality within the app.\n * It uses separate permission requesters to interact with a single permission.\n * By default, the hook will only retrieve the permission status.\n */\nfunction usePermission<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>,\n  options?: PermissionHookOptions<Options>\n): [Permission | null, RequestPermissionMethod<Permission>, GetPermissionMethod<Permission>] {\n  const isMounted = useRef(true);\n  const [status, setStatus] = useState<Permission | null>(null);\n  const { get = true, request = false, ...permissionOptions } = options || {};\n\n  const getPermission = useCallback(async () => {\n    const response = await methods.getMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.getMethod]);\n\n  const requestPermission = useCallback(async () => {\n    const response = await methods.requestMethod(\n      Object.keys(permissionOptions).length > 0 ? (permissionOptions as Options) : undefined\n    );\n    if (isMounted.current) setStatus(response);\n    return response;\n  }, [methods.requestMethod]);\n\n  useEffect(\n    function runMethods() {\n      if (request) requestPermission();\n      if (!request && get) getPermission();\n    },\n    [get, request, requestPermission, getPermission]\n  );\n\n  // Workaround for unmounting components receiving state updates\n  useEffect(function didMount() {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return [status, requestPermission, getPermission];\n}\n\n/**\n * Create a new permission hook with the permission methods built-in.\n * This can be used to quickly create specific permission hooks in every module.\n */\nexport function createPermissionHook<Permission extends PermissionResponse, Options extends object>(\n  methods: PermissionHookMethods<Permission, Options>\n) {\n  return (options?: PermissionHookOptions<Options>) =>\n    usePermission<Permission, Options>(methods, options);\n}\n"]},"metadata":{},"sourceType":"script"}